[
  {
    "id": 6,
    "lessonId": 1,
    "stepType": "quiz",
    "title": "Sprawdź swoją wiedzę o tablicach",
    "content": "Wybierz poprawną odpowiedź:",
    "question": "Jaka jest złożoność czasowa dostępu do elementu tablicy po indeksie?",
    "options": [
      {
        "id": "1",
        "text": "O(1) - stały czas"
      },
      {
        "id": "2",
        "text": "O(log n) - logarytmiczny czas"
      },
      {
        "id": "3",
        "text": "O(n) - liniowy czas"
      }
    ],
    "correctAnswer": "1",
    "explanation": "Dostęp do elementu tablicy po indeksie ma złożoność O(1), ponieważ adres elementu można obliczyć bezpośrednio na podstawie adresu bazowego i indeksu."
  },
  {
    "id": 13,
    "lessonId": 2,
    "stepType": "quiz",
    "title": "Quiz wiedzy o listach powiązanych",
    "content": "Sprawdź swoją wiedzę o listach powiązanych:",
    "question": "Jaka jest złożoność czasowa dostępu do n-tego elementu listy jednokierunkowej?",
    "options": [
      {
        "id": "1",
        "text": "O(1) - stały czas"
      },
      {
        "id": "2",
        "text": "O(log n) - logarytmiczny czas"
      },
      {
        "id": "3",
        "text": "O(n) - liniowy czas"
      }
    ],
    "correctAnswer": "3",
    "explanation": "Dostęp do n-tego elementu listy jednokierunkowej wymaga przejścia przez wszystkie poprzednie elementy, co daje złożoność O(n)."
  },
  {
    "id": 20,
    "lessonId": 4,
    "stepType": "quiz",
    "title": "Quiz o drzewach binarnych",
    "content": "Sprawdź swoją wiedzę na temat drzew binarnych:",
    "question": "Które z poniższych twierdzeń jest prawdziwe dla drzewa BST (Binary Search Tree)?",
    "options": [
      {
        "id": "1",
        "text": "Dla każdego węzła, wszystkie wartości w lewym poddrzewie są większe niż wartość węzła"
      },
      {
        "id": "2",
        "text": "Dla każdego węzła, wszystkie wartości w lewym poddrzewie są mniejsze niż wartość węzła"
      },
      {
        "id": "3",
        "text": "Wysokość drzewa BST zawsze wynosi log(n), gdzie n to liczba węzłów"
      }
    ],
    "correctAnswer": "2",
    "explanation": "W drzewie BST, dla każdego węzła, wszystkie wartości w lewym poddrzewie są mniejsze niż wartość węzła, a wszystkie wartości w prawym poddrzewie są większe niż wartość węzła. Ta własność umożliwia efektywne wyszukiwanie."
  },
  {
    "id": 27,
    "lessonId": 11,
    "stepType": "quiz",
    "title": "Quiz o notacji Big O",
    "content": "Sprawdź swoją wiedzę o notacji Big O:",
    "question": "Jaka jest złożoność czasowa wyszukiwania binarnego w posortowanej tablicy?",
    "options": [
      {
        "id": "1",
        "text": "O(1)"
      },
      {
        "id": "2",
        "text": "O(log n)"
      },
      {
        "id": "3",
        "text": "O(n)"
      },
      {
        "id": "4",
        "text": "O(n log n)"
      }
    ],
    "correctAnswer": "2",
    "explanation": "Wyszukiwanie binarne ma złożoność O(log n), ponieważ w każdym kroku zmniejszamy obszar wyszukiwania o połowę. To jest znacznie bardziej efektywne niż wyszukiwanie liniowe O(n) dla dużych tablic."
  }
]